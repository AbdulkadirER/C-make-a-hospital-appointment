<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCikis.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAABJ1JREFUWEe1
        mLuLXVUUh2cmuUkM0USjkPh+TKFTzePOewhTTDOVjdP4JyjYWNlNK6QM2KRKUFBsbQSNiAiWU5hWMIFU
        AWMhgjj6+9Zd67Dvufvcs8/J5MJir7P2enyzX2efmdFvFllZWRnwcHh4OLe7u3sa/eDg4BSCjo0+qXPD
        4fCG/L+SfCH53KVNp031ej9yc3Nz8yXVqHj4ze7v759FwSigM+jYHHRW7TngEMHdlt9/JSLfrL1FjqlH
        XRscGYyUtg0OXX7fe6Kp0hPORHVtFp2hHA7b8vLyD5FoY2PjndXV1VekX93a2nqN6UGX/fWlpaUXEezY
        1tfXX1b7qvyvCP5d6f9IJuBcBjGrtuZK4ehT8moEBfRcxNl0eBwtz1GEgtQAWPpvEd8knmM0uxTloQQO
        HwVVgNvb20+XwO3s7DyrP+zniGsThdmged5yOHxVqJpi2Z+fBodtOLRdOgExTYhXO9rFJARAaiscf5UC
        qxFcXFy8FHG0KZz63w+/rkIdzzEwQJIXwg0kFaAW/jMNcPgdhV9XUYo5z8UZPZqKEjj0+hTjW4dz/1/D
        r6vAQE5yV2+IEjhs0m0EBWojmINz/S5+fYT6SjF6m3SBA0bPd4DzZBdzcP6H9B5B6gQP+Wz9eZuDs/VA
        ED6CuxOJ5M8UT8CRR7begDpfn6KW1ZQBiCyc5BMPOnKfc36m8T4+5hzErw6Hr3x6TTGzAxiiZ5u9Jrgv
        IwgBDl8C3dfWSA4OX/V1HsFYOimPrcEM3NgRQaC6s7sVvQ5HTvV3GsGAQ8hBXsspgw2jw52XPAxHJAl8
        pBf9d2o/kLzt6yQL54DFI5jCIcpFPAMwetUlIzd2w6gHZuRfyT3dcG7J9z1dBl6IE0H2IsBcDXhidoCL
        xcia+jucCuCQPyTfyvdDtW9JBj495Gqd4qYa6TIau80sLCwwkg8aAo9k/1TTvLq3t3cxN60BR5/8p47g
        tAFQDtsX5ITN4Hy+Ywf+Ug+KIW9acykcPoppBJwGh5AratgIpnC0PCvJrTRI9jG4tbW1A+kXcnD4KiY7
        xW1wLrbkbFB8GMfgkiIfe8BPASf9uuQYe3qbSeFIrP6JESyEsymOvOSz2wwPNbg45+yrDwB0FZm4zWTg
        OBHGAEvhEI6wWDpxDhYfwuqr3wcn4NDVVlPcBQ6BBTjplqsYzoOSy8LipRwcNuk2gl3hEHioRy5+XT/c
        K0BtlMv41uEooOe7feCQ3G2mCA5dfmNfdTk44gTX6zaDKJ5aj//hzncxsREXcPjKPvWgbpEn/+Gu/t4j
        6DlGs0tRHkrg8FFQBSh51CB/SrhIjBUuFdV7rA/3FLCSvhsiJ8CptaXDDuz04a6d+4aCufXwNjERXKUn
        ki1eINzkq41rgA7SCheB2NI4Wp7DFz9J101yXxelN9VWNciLbq+6k4Rz/1LAv3TRvdZUwzbJScO53raL
        WQYf4dtUw2xPAg6bnqeN4Geeo7UG9urhpODII1sO8Ef1XehSw5K78cTg8NHO/kZ9AfY7/wLuWiP6cY6j
        JgriXMEjoaeBxKS+LBX3OTM/P39Wr8WvtTOv0d+vxszM/818eMIo8srbAAAAAElFTkSuQmCC
</value>
  </data>
</root>